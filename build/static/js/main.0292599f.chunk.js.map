{"version":3,"sources":["config/config.js","services/firebaseservice.js","services/hashtag.js","components/AddArticle.jsx","App.js","reportWebVitals.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseService","init","firebase","apps","length","app","initializeApp","save","store","rowid","data","firestore","collection","doc","set","hashtag","value","trim","replace","AddArticle","props","useState","articleUrl","setArticleUrl","articleHashTag","setArticleHashTag","articlesHashTags","setArticleHashTags","showErrorToast","setErrorToast","showSuccessToast","setSuccessShowToast","firebaseservice","clearArticleForm","addArticleHashTag","newArticleHashTag","find","a","console","log","Modal","show","onHide","handleClose","backdrop","keyboard","size","Header","closeButton","Title","Body","Toast","onClose","delay","autohide","Form","Row","Group","controlId","Label","Control","type","onChange","e","target","Col","map","articlesHashTag","Badge","pill","variant","onClick","newArticleHashTags","filter","closeArticleHashTag","Button","class","submitObj","url","hashtags","uuid","JSON","stringify","submitArticleForm","App","modalShow","setModalShow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0292599f.chunk.js","sourcesContent":["export const config = {\r\n  apiKey: \"AIzaSyBaJguc5C9n8RoT42Gnth6pNDaZGgv4wT0\",\r\n  authDomain: \"metadata-11c50.firebaseapp.com\",\r\n  projectId: \"metadata-11c50\",\r\n  storageBucket: \"metadata-11c50.appspot.com\",\r\n  messagingSenderId: \"584960291183\",\r\n  appId: \"1:584960291183:web:3df6894c85db5d23bc789a\",\r\n  measurementId: \"G-EKM1CSH9WJ\",\r\n};","import firebase from \"firebase/app\";\r\nimport { config } from \"../config/config\";\r\nimport \"firebase/firestore\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\n\r\nexport default class FirebaseService {\r\n \r\n  init = () => {\r\n    !firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\r\n  };\r\n\r\n  save = (store, rowid, data) => {\r\n    firebase.firestore().collection(store).doc(rowid).set(data);\r\n  };\r\n}\r\n","\r\n\r\nconst  hashtag = (value) => {\r\n    \r\n    return (value.trim() === \"\")?\"\": `#${value.replace(/[^a-zA-Z0-9]/g, \"\")}`;\r\n\r\n}\r\nexport default hashtag;","import React, { useState } from \"react\";\r\nimport { Modal, Form, Button, Badge, Col, Toast } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FaWindowClose } from \"react-icons/fa\";\r\nimport FirebaseService from \"../services/firebaseservice\";\r\nimport uuid from \"react-uuid\";\r\nimport \"../services/hashtag\"\r\nimport hashtag from \"../services/hashtag\";\r\n\r\nconst AddArticle = (props) => {\r\n  const [articleUrl, setArticleUrl] = useState(\"\");\r\n  const [articleHashTag, setArticleHashTag] = useState(\"\");\r\n  const [articlesHashTags, setArticleHashTags] = useState([]);\r\n  const [showErrorToast, setErrorToast] = useState(false);\r\n  const [showSuccessToast, setSuccessShowToast] = useState(false);\r\n\r\n  const firebaseservice = new FirebaseService();\r\n  firebaseservice.init();\r\n\r\n  const handleArticleUrl = (e) => {\r\n    setArticleUrl(e.target.value);\r\n  };\r\n  const handleArticleHashTag = (e) => {\r\n    setArticleHashTag(e.target.value);\r\n  };\r\n\r\n  const submitArticleForm = () => {\r\n    if (articleUrl.trim() === \"\") {\r\n      setErrorToast(true);\r\n      return;\r\n    }\r\n\r\n    //encodeURIComponent(articleUrl)\r\n    const submitObj = {\r\n      url: articleUrl,\r\n      hashtags: articlesHashTags,\r\n    };\r\n    firebaseservice.save(\"sitemetadata\", uuid(), submitObj);\r\n    console.log(\"submit article url and badges \" + JSON.stringify(submitObj));\r\n    setSuccessShowToast(true);\r\n    clearArticleForm();\r\n  };\r\n\r\n   \r\n  const clearArticleForm = () => {\r\n    setArticleUrl(\"\");\r\n    setArticleHashTag(\"\");\r\n    setArticleHashTags([]);\r\n  };\r\n\r\n  const closeArticleHashTag = (articleHashTag) => {\r\n    const newArticleHashTags = articlesHashTags.filter(\r\n      \r\n      (e) => e !== articleHashTag\r\n    \r\n    );\r\n    setArticleHashTags(newArticleHashTags);\r\n  };\r\n\r\n  const addArticleHashTag = () => {\r\n    if (articleHashTag.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    const newArticleHashTag = hashtag(articleHashTag);\r\n\r\n    const found = articlesHashTags.find(\r\n      (a) => a === newArticleHashTag\r\n    );\r\n\r\n    if (!found) {\r\n      setArticleHashTags([\r\n        ...articlesHashTags,\r\n        newArticleHashTag,\r\n      ]);\r\n      setArticleHashTag(\"\");\r\n    }\r\n    console.log(articlesHashTags);\r\n  };\r\n\r\n  const checkAndAddHashSymbol = (str) => {\r\n    if (str.trim() === \"\") {\r\n      return \"\";\r\n    }\r\n    if (str.indexOf(\"#\") !== 0) {\r\n      return \"#\" + str;\r\n    }\r\n    return str;\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.handleClose}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      size=\"sm\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Article</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <main>\r\n          <Toast\r\n            show={showSuccessToast}\r\n            onClose={() => setSuccessShowToast(false)}\r\n            delay={3000}\r\n            autohide\r\n          >\r\n            <Toast.Header>\r\n              <strong>Article Submitted</strong>\r\n            </Toast.Header>\r\n          </Toast>\r\n          <Toast show={showErrorToast} onClose={() => setErrorToast(false)}>\r\n            <Toast.Header>\r\n              <strong>Article Url Error</strong>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              <span>Please enter Article Url</span>\r\n            </Toast.Body>\r\n          </Toast>\r\n\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group controlId=\"formArticlUrl\">\r\n                <Form.Label>Article Url</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  onChange={handleArticleUrl}\r\n                  value={articleUrl}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group controlId=\"formArticleHashTags\">\r\n                <Form.Label>Hash Tag</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  onChange={handleArticleHashTag}\r\n                  value={articleHashTag}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Col>\r\n                <Form.Group controlId=\"formPills\">\r\n                  {articlesHashTags.map((articlesHashTag) => (\r\n                    <Badge pill variant=\"dark\" key=\"{uuid()}\">\r\n                      {articlesHashTag}\r\n                      <FaWindowClose\r\n                        onClick={() => closeArticleHashTag(articlesHashTag)}\r\n                      />\r\n                    </Badge>\r\n                  ))}\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId=\"formButtons\">\r\n                  <Button\r\n                    class=\"close\"\r\n                    variant=\"outline-secondary\"\r\n                    type=\"button\"\r\n                    onClick={() => addArticleHashTag()}\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </Form.Group>\r\n              </Col>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group controlId=\"formButtons\">\r\n                <Button\r\n                  class=\"close\"\r\n                  variant=\"outline-secondary\"\r\n                  type=\"button\"\r\n                  onClick={() => addArticleHashTag()}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Col>\r\n                <Button variant=\"primary\" onClick={() => clearArticleForm()}>\r\n                  Clear\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button variant=\"primary\" onClick={() => submitArticleForm()}>\r\n                  Get Article\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </main>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddArticle;\r\n","import './App.css';\nimport AddArticle from './components/AddArticle'\nimport React, { useState } from 'react'\nimport { Button } from \"react-bootstrap\";\n\nfunction App() {\nconst [modalShow, setModalShow] = useState(false);\n\n  return (\n    <>\n      <div>\n      <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n        Open Modal\n      </Button>\n      </div>\n      <AddArticle show={modalShow} handleClose={() => setModalShow(false)} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n          <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}